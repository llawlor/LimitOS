<% if @device.video_enabled? %>
  <%= javascript_include_tag 'jsmpeg.min' %>
<% end %>

<script>
  // keep track of the start transmission time
  var start_transmission_time = 0;
  // keep track of the video player
  var video_player = null;
  // keep track of the video timeout
  var video_timeout = null;
  // keep track of whether the video is currently playing
  var video_active = false;
  // set the device id
  var device_id = '<%= @master_device.id %>';
  // set the auth token
  var device_auth_token = '';
  // set the video url
  var video_server_url = '<%= @device.video_to_clients_url %>';
  // set the audio output url
  var audio_output_url = '<%= @device.audio_output_url %>';
  
  // when the document is ready
  $(document).ready(function() {

    // when user activity is detected
    $('body').on('mousemove mousedown touchstart touchmove', function() {
      // only detect activity if video has been played
      if (video_active === true) { activityDetected(); }
    });

    // create the subscription
    App.messaging = App.cable.subscriptions.create(
      {
        channel: 'DevicesChannel',
        id: device_id,
        auth_token: device_auth_token
      },
      {

        // when data is received
        received: function(data) {
          // log the data
          logData(data);
        },

        // function to send a message
        send_message: function(message) {
          // mark the start time
          start_transmission_time = (new Date).getTime();

          // perform the "receive" action in app/channels/devices_channel.rb
          this.perform('receive', message);
        }

      }
    );

  });

  // start the video
  function startVideo() {
    // mark the video as started
    video_active = true;
    // show the canvas
    $('#video_canvas').removeClass('hidden');
    // create the message
    var message = { command: 'start_video' };
    // send the message to start the video
    App.messaging.send_message(message);
    // load the video
    video_player = new JSMpeg.Player(video_server_url, {canvas: $('#video_canvas')[0]});
  }

  // stop the video
  function stopVideo() {
    // mark the video as stopped
    video_active = false;
    // hide the canvas
    $('#video_canvas').addClass('hidden');
    // disconnect the video
    video_player.destroy();
  }

  // new user activity is detected
  function activityDetected() {
    // clear the current timeout
    clearTimeout(video_timeout);

    // set new timeout for 10 minutes
    video_timeout = setTimeout(function() {
      // stop video
      stopVideo();
    }, 600000);
  }

  // when the document is ready
  $(document).ready(function() {

    <% if @device.video_enabled? %>
      // start video on page load, with a slight delay to make sure everything has loaded
      setTimeout(function() {
        startVideo();
      }, 1000);
    <% end %>

  });

  // function to log the data
  function logData(data) {
    // do nothing
  }
</script>

<% if @device.offline? %>

  <div style="padding: 20px;">Device is offline.</div>

<% elsif @device.video_enabled? %>

  <canvas id="video_canvas" class="hidden pull-left" style="width: 100%; height: 100%; <%= "transform: scaleY(-1) scaleX(-1);".html_safe if @device.invert_video? %>"></canvas>

<% end %>
